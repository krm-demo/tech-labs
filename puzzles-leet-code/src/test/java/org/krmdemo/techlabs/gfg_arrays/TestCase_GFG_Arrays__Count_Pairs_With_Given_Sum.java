package org.krmdemo.techlabs.gfg_arrays;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.EnumSource;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * Test-Case for Geek-For-Geeks puzzle {@link GFG_Arrays__Count_Pairs_With_Given_Sum}
 */
public class TestCase_GFG_Arrays__Count_Pairs_With_Given_Sum {

    @EnumSource
    @ParameterizedTest
    void test_ex_01(GFG_Arrays__Count_Pairs_With_Given_Sum.Solution sln) {
        assertThat(sln.countPairs(new int[] {1, 5, 7, -1, 5}, 6)).isEqualTo(3);
    }

    @EnumSource
    @ParameterizedTest
    void test_ex_02(GFG_Arrays__Count_Pairs_With_Given_Sum.Solution sln) {
        assertThat(sln.countPairs(new int[] {1, 1, 1, 1}, 2)).isEqualTo(6);
    }

    @EnumSource
    @ParameterizedTest
    void test_ex_03(GFG_Arrays__Count_Pairs_With_Given_Sum.Solution sln) {
        assertThat(sln.countPairs(new int[] {10, 12, 10, 15, -1}, 125)).isEqualTo(0);
    }

    @EnumSource
    @ParameterizedTest
    void test_ex_1032_of_1107(GFG_Arrays__Count_Pairs_With_Given_Sum.Solution sln) {
        int[] arr = new int[]{
            355, -519, 2705, -7101, -3655, -6477, -9694, 2420, 952, -6400, 3089, -569, -8578, -2875, 1649, 3595,
            -1558, 5619, 2197, 9726, -729, -5179, -7088, -9603, 2890, -1840, 2652, 57, 8428, -6518, -8840, -6747,
            -3354, 6343, 260, 7028, 7505, -7850, -7269, 8621, -4425, -3298, -2191, -4080, -5989, 201, -1568, -1333,
            799, -9008, 6238, -9221, -9124, 4600, -7943, 5182, 7612, -4433, -5226, 5644, -3334, -8698, -3712, 9588,
            796, 731, 6437, -1679, -5345, -8348, 8810, -7856, -7421, -4510, -4450, 9524, -3577, -1824, 9117, 555,
            -3289, 8593, -3267, -5230, 8393, 5700, 4278, -8954, -7518, -254, -7891, -5554, 1768, -418, 8376, 4001,
            -994, 6296, 5658, -6597, -1226, -9030, 7530, -6390, 652, -7019, 5234, 1026, -8296, -3305, -6089, -8574,
            9435, -2258, 1097, 5020, -7208, -2135, -2300, 5137, -6508, 2475, 7450, -9046, -2871, -5303, -6300, -1391,
            -8292, -5421, 690, 8182, 956, 9192, -5513, -2484, -2312, 554, -985, 7770, 9560, -9101, -338, 8521, -9893,
            2146, 8832, -3910, -771, 4726, -8222, 5928, -9145, -1392, -6776, 3612, -3078, 5613, 2492, 6361, -3057, 3510,
            9358, 1274, 4610, 3373, -7148, 1081, -7184, -8546, -7769, 6364, -7118, 5710, -2267, 3266, 8526, 3967, 9790,
            -4461, 566, -7235, 3401, 6806, -8760, 3901, -6635, -9918, 5846, -6924, 2394, -1201, -5384, -5578, 6007,
            6733, 5694, 3137, 3431, 8957, -9753, 8172, -6633, -3265, -1254, 593, -2266, 6686, -7642, 3533, -2034,
            -7177, 7411, 324, 380, 8051, -3745, -2828, -7877, 5834, 2543, 7941, 3351, 2213, -182, -5342, -2471, -5391,
            -3619, -6059, 1171, -3786, -9245, 5689, -6672, 8008, 3304, -3178, -4489, -4441, 4273, 5410, 2394, 5737,
            2284, 71, -8210, -3427, 6430, 3752, -4212, -3754, -3880, -6218, -2713, 4981, 4382, -6731, 7991, 6964,
            -3647, -9399, -8621, -3736, 6468, -5622, -348, 2636, 6125, 5875, -1938, 9087, 215, -5998, 2053, 4774, 2060,
            -4948, -9784, -9772, 8294, 4018, -7445, 4684, 5808, 6407, 4855, -2914, 2856, 6059, 412, -366, -2487, -7100,
            -4797, 527, -807, -5397, 4122, 3343, -2375, 8232, -3706, -9857, -3042, -3911, -5545, 6532, 5654, -4114,
            2334, -4112, -4296, 3293, 7401, 7877, 6522, -8941, -2783, 3717, -930, -4596, -5474, 6069, -2941, 7928, 4318,
            2861, -8748, -1874, 2633, 303, 8989, 4653, -3942, -3531, 7911, 2058, -3427, -4216, 7697, -8942, 5343, 2413,
            -9475, 2049, -1454, -5659, 9933, 1466, -3698, -4049, 2628, 4129, 2426, -7851, 5110, -7196, -3711, -5306,
            -7770, -2718, 2226, -4298, 5965, -3645, 7551, 3760, 6750, 566, 9785, 8435, 6290, -291, 6950, 5845, 2033,
            -8967, -2775, -2557, -8039, 5409, -2734, 7646, -3230, 421, -6925, -6839, -3879, 4495, 5260, 1449, -860,
            -2685, 5431, 8558, 6146, 900, -8061, -8107, 3995, -6738, 6966, 5966, 9695, -2829, 6850, -40, -1227, -4239,
            -8068, 8447, -6634, 2890, 9004, -896, -5461, -3142, -435, 5283, -3482, 3224, 4129, 5237, 9505, -4694, -910,
            5897, 1629, 3855, -4335, -8728, -271, -6699, 4015, -9064, 4305, -9526, -6875, -95, 3099, -8611, 2249, -7369,
            -5747, 2787, -2381, -6989, 8663, -7417, -8596, 4927, 4389, -1879, -4875, -6166, 7783, -8130, -5331, 4778,
            -4288, 5948, -7197, -1534, 555, -2223, 3917, -6102, 3886, 937, 378, 9858, 423, -3258, -2518, 1386, -6261,
            -3206, -919, 2198, 913, -9247, 6164, -610, 4688, 4636, 2857, -8920, 9810, -8301, -2846, 1296, -6927, -377,
            -5552, 9568, -1581, 7931, -1756, 6297, -4472, 406, 4798, 5470, 8120, -7113, 5164, -1346, -9718, -2400, 6523,
            3950, -646, -4865, 9081, 7653, -656, 8769, 2405, -3834, 4080, 674, 6085, 2602, -4883, 116, -6856, 642,
            -7968, -9027, 2752, 8411, -2552, -9067, -1899, -1001, 1305, 3193, -4645, -9337, 5839, 5726, 3670, 1139,
            -2810, 4303, 4614, 2705, 264, 4184, -1766, 6802, -5487, 9442, 8577, -8255, 24, 9663, 3542, -4992, -3875,
            -1333, 9003, 8550, -7524, -8880, 9077, 9245, -9529, -2740, 5233, 6105, 1146, 2067, -6555, -137, -9945, 6674,
            -5760, 6744, 1496, 3994, -9132, 1751, 3033, 3453, -5523, 1537, 8508, 8079, 4471, 2398, -6055, -2895, 2048,
            2015, 9368, 9569, -7869, -5026, 6511, -5272, 6667, -8873, -7645, 9648, 6395, -9734, 6739, 1626, 3812, 737,
            8925, 9189, 7984, 7344, -3640, 4705, 8117, -1123, 2039, -4400, 4417, -4944, 5609, -1637, 3420, 6690, 5879,
            -9732, -2978, -6431, -9443, 3256, -7739, 4380, -7610, 3686, 9573, 1363, 1326, -8967, 2493, 2509, -2564,
            -7059, -3730, 7931, -6186, 5086, -1944, 9216, 6593, -5294, -4496, 8368, -6054, -4642, 5614, 2671, -6877,
            880, 4594, 2903, 4723, -5259, 7678, 6981, 6064, 2776, -9184, 3250, -8213, -2180, 9012, -5085, 1362, -4083,
            5687, -2734, -7203, 8919, 6881, -6605, -1785, 9694, 5483, 6853, 1067, 3547, 173, -1397, 4730, 8263, -5795,
            -6728, -2966, -5554, 1403, 8483, -8003, 6492, -6480, 757, 9113, -2381, 2567, 2460, 6107, 8508, 4305, 9826,
            2831, -9424, -9650, 2937, 3324, -371, 9190, 2707, 208, 2920, 3001, -9251, -4690, -5649, 8869, -9656, 13,
            1404, 8498, -8431, 8076, 7240, 6742, -8465, -5917, 4495, -230, -9714, -1267, 5303, 3376, -6358, 6903,
            -3200, 8510, 6063, -7588, -3120, 8074, -8974, 4769, -9689, -2214, 2372, 4142, 5398, 1370, 6375, -6673,
            9626, -6219, -7733, 6757, -7657, -2674, -319, -1464, -5903, -3455, -546, 526, 8685, -7868, -7910, 7456,
            -55, -720, -745, -4732, -9014, 9491
        };
        assertThat(sln.countPairs(arr, 2052)).isEqualTo(13);
    }
}
